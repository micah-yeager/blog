import {
  Links,
  LiveReload,
  Meta,
  Outlet,
  Scripts,
  ScrollRestoration,
  useLoaderData,
} from "@remix-run/react"
import { Analytics } from "@vercel/analytics/react"
import type { LinksFunction } from "@vercel/remix"
import { json } from "@vercel/remix"
import { SpeedInsights } from "@vercel/speed-insights/remix"

import type { Env } from "~/browser-globals"
import { Layout } from "~/components/Layout"
import { TURNSTILE_SITE_KEY } from "~/services/turnstile.server"

import styles from "./tailwind.css"

export const links: LinksFunction = () => [
  { rel: "stylesheet", href: styles },
  { rel: "preconnect", href: "https://rsms.me/" },
  { rel: "stylesheet", href: "https://rsms.me/inter/inter.css" },
]

export async function loader() {
  return json({
    ENV: {
      TURNSTILE_SITE_KEY,
    } as Env,
  })
}

export default function App() {
  const { ENV } = useLoaderData<typeof loader>()

  // title is generated by Remix in each route, so ignore it here
  // noinspection HtmlRequiredTitleElement
  return (
    // always start with the "dark" class, so we don't flash-bang our dark mode users while the JS loads
    <html lang="en" className="dark h-full antialiased">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <Meta />
        <Links />
      </head>
      <body className="h-full w-full bg-zinc-50 text-zinc-600 dark:bg-black dark:text-zinc-400">
        <Layout>
          <Outlet context={ENV} />
        </Layout>
        <ScrollRestoration />
        <script
          dangerouslySetInnerHTML={{
            __html: `window.ENV = ${JSON.stringify(ENV)}`,
          }}
        />
        {/*<script*/}
        {/*  src="https://challenges.cloudflare.com/turnstile/v0/api.js"*/}
        {/*  async*/}
        {/*  defer*/}
        {/*/>*/}
        <Scripts />
        <LiveReload />
        <SpeedInsights />
        <Analytics />
      </body>
    </html>
  )
}
